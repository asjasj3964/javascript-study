
Execution Context
- 실행하려는 JS 코드와 코드를 실행할 때 필요한 정보를 담고 있는 특수한 환경
  - 코드 실행에 필요한 모든 데이터를 들고 있는 환경
- execution context는 2개의 type으로 이루어진다. 
  1) global context
     - 최상위 execution context 
     - 코드를 실행하면 무조건 생성되는 context
     - 웹에서의 window 객체나 nodeJS에서의 global 객체를 생성하고 들고 있다. 
  2) function context
     - 함수가 실행될 때마다 함수별로 실행되는 context
     - 함수 실행에 대한 모든 정보를 갖고 있다. 
  실행 시 기본적으로 global context가 생성되고,
  함수를 실행할 때마다 각각 함수별로 function context가 생성된다. 

자바스크립트
- 싱글 스레드 프로그램
- 싱글 스레드 안에 하나의 memory heap과 하나의 call stack(execution context stack)이 존재한다.
  - memory heap: 메모리를 관리하는 공간
  - call stack: 함수를 실행할 때마다 스택에 올라가고 함수가 종료될 떄마다 위에서부터 사라진다(선입선출). 

Execution Context Stack 생성 시
- Creation Phase
  - global object 생성, window 또는 global 객체가 생성되고 함수에서는 arguments 객체가 생성된다. 
  - this를 window 또는 global에 바인딩한다. 
  - 변수와 함수를 memory heap에 배정하고 기본 값을 undefined로 저장한다. 
    - hoisting -> 모든 변수나 함수가 최상위에 선언되어 있는 것처럼 실행한다. 
- Execution Phase
  - 코드를 실행한다. 
  - 필요하다면 새로운 execution context를 생성한다. 
